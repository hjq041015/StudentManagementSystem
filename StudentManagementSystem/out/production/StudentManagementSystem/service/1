package service;

import model.Student;
import util.JDBCUtils;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Scanner;

public class StudentService {

    public static void  insert()  {
        Connection connection = null;
        PreparedStatement preparedStatement = null;
        try {
            connection = JDBCUtils.getConnection();

            System.out.println("请输入要添加学生的姓名和年龄(以enter隔开)");
            Scanner scanner = new Scanner(System.in);
            String name = scanner.nextLine();
            int age = scanner.nextInt();

            String sql = "INSERT INTO info(name,age) values (?,?)";
            preparedStatement = connection.prepareStatement(sql);
            preparedStatement.setString(1,name);
            preparedStatement.setInt(2,age);
            int res = preparedStatement.executeUpdate();
            if (res > 0 ) {
                System.out.println("insert success!");
            }
        } catch (SQLException e) {
            throw new RuntimeException(e);
        } finally {
            try {
                JDBCUtils.close(connection,preparedStatement);
            } catch (SQLException e) {
                throw new RuntimeException(e);
            }
        }
    }

    public static ArrayList<Student> selectAll()  {
        ArrayList<Student> arrayList = new ArrayList<>();
        Connection connection = null;
        PreparedStatement preparedStatement = null;
        ResultSet res = null;

        try {
            connection = JDBCUtils.getConnection();
            String sql = "select * from info ";
            preparedStatement = connection.prepareStatement(sql);
            res = preparedStatement.executeQuery();

            while (res.next()) {
                arrayList.add(new Student(res.getInt(1), res.getString(2),res.getInt(3) ));
            }
            return arrayList;

        } catch (SQLException e) {
            throw new RuntimeException(e);
        } finally {
            try {
                JDBCUtils.close(connection,preparedStatement,res);
            } catch (SQLException e) {
                throw new RuntimeException(e);
            }
        }

    }

    public static Student selectById(int id) {
        Connection connection = null;
        PreparedStatement preparedStatement = null;
        ResultSet res = null;
        Student student = null;
        try {
            connection = JDBCUtils.getConnection();
            String sql = "select * from info where id = ?";
            preparedStatement = connection.prepareStatement(sql);
            preparedStatement.setInt(1,id);
            res = preparedStatement.executeQuery();

            while (res.next()) {
                student.setId(res.getInt(1));
                student.setName(res.getString(2));
                student.setAge(res.getInt(3));
            }
            return student;


        } catch (SQLException e) {
            throw new RuntimeException(e);
        } finally {
            try {
                JDBCUtils.close(connection,preparedStatement,res);
            } catch (SQLException e) {
                throw new RuntimeException(e);
            }
        }

    }

    public static boolean delete(int id) {
        Connection connection = null;
        PreparedStatement preparedStatement = null;
        try {
            connection = JDBCUtils.getConnection();
            String sql = "delete from info where id = ? ";
            preparedStatement = connection.prepareStatement(sql);
            preparedStatement.setInt(1,id);
            int res = preparedStatement.executeUpdate();
            if (res > 0) {
                return true;
            }

        } catch (SQLException e) {
            throw new RuntimeException(e);
        } finally {
            try {
                JDBCUtils.close(connection,preparedStatement);
            } catch (SQLException e) {
                throw new RuntimeException(e);
            }
        }
        return false;
    }

    public static boolean update(int id, String name, int age)  {
        Connection connection = null;
        PreparedStatement preparedStatement = null;
        try {
            connection = JDBCUtils.getConnection();
            String sql = "update info set name=? age = ? where id = ? ";
            preparedStatement = connection.prepareStatement(sql);
            preparedStatement.setString(1,name);
            preparedStatement.setInt(2,age);
            preparedStatement.setInt(3,id);


            int res = preparedStatement.executeUpdate();
            if (res > 0) {
                return true;
            }

        } catch (SQLException e) {
            throw new RuntimeException(e);
        } finally {
            try {
                JDBCUtils.close(connection,preparedStatement);
            } catch (SQLException e) {
                throw new RuntimeException(e);
            }
        }
        return false;
    }

    public static boolean update(int id, String name)   {
        Connection connection = null;
        PreparedStatement preparedStatement = null;
        try {
            connection = JDBCUtils.getConnection();
            String sql = "update info set name=? where id = ? ";
            preparedStatement = connection.prepareStatement(sql);
            preparedStatement.setString(1,name);
            preparedStatement.setInt(2,id);


            int res = preparedStatement.executeUpdate();
            if (res > 0) {
                return true;
            }

        } catch (SQLException e) {
            throw new RuntimeException(e);
        } finally {
            try {
                JDBCUtils.close(connection,preparedStatement);
            } catch (SQLException e) {
                throw new RuntimeException(e);
            }
        }
        return false;
    }

    public static boolean update(int id,  int age)   {
        Connection connection = null;
        PreparedStatement preparedStatement = null;
        try {
            connection = JDBCUtils.getConnection();
            String sql = "update info set age = ? where id = ? ";
            preparedStatement = connection.prepareStatement(sql);
            preparedStatement.setInt(1,age);
            preparedStatement.setInt(2,id);


            int res = preparedStatement.executeUpdate();
            if (res > 0) {
                return true;
            }

        } catch (SQLException e) {
            throw new RuntimeException(e);
        } finally {
            try {
                JDBCUtils.close(connection,preparedStatement);
            } catch (SQLException e) {
                throw new RuntimeException(e);
            }
        }
        return false;
    }
}
